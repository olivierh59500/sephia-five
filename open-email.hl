
/*
 * Open an email for reading.
 *
 * Expects [email-id] being ID of email from database.
 */





/*
 * Checking if email is already open.
 */
p5.web.widgets.find:sephia-read-emails
  _email-id:x:/../*/email-id?value.string
if:x:/@p5.web.widgets.find/*/*
  sys42.windows.info-tip:Email is already open!
    class:info-window info-window-error
  return





/*
 * Retrieving email with specified ID.
 */
p5.mysql.connect:[sephia]
  whoami

  /*
   * Retrieving attachments for email, and databinding attachment widget using [apply].
   */
  p5.mysql.select:@"select * from attachments where emailid = @emailid"
    @emailid:x:/../*/email-id?value
  apply:x:/../**/div/*/class/=sephia-attachments/./*/widgets
    src:x:/@p5.mysql.select/*
    template
      div
        role:button
        class:sephia-attachment
        oninit

          /*
           * Making sure file extension is in "whitelist", otherwise preventing download of file.
           */
          {_filename}:x:/*/filename?value
          split:x:/@_filename?value
            =:.
          switch:x:/@split/0/-?name
            case:txt
            case:md
            case:zip
            case:png
            case:jpg
            case:jpeg
            case:gif
            case:hl
              break
            default

              /*
               * Denying download of file!
               */
              sys42.utilities.add-css-classes:x:/../*/_event?value
                class:sephia-sandboxed-attachment
              p5.web.widgets.ajax-events.set:x:/../*/_event?value
                onclick
                  sys42.windows.info-tip:@"These types of files can contain viruses and other types of malware that can destroy your computer. Hence to make sure your computer stays safe, we have explicitly turned OFF downloading of such files!"
                    class:info-window info-window-longer info-window-error

        onclick

          /*
           * "Databound" in above [apply].
           */
          {_filename}:x:/*/filename?value
          {_folder}:x:/*/folder?value
          {_prefix}:x:/*/prefix?value

          /*
           * Letting the CMS "download event" do the heavy lifting ...
           */
          eval-x:x:/+/*/filename
          sys42.cms.download-file:{0}{1}{2}
            :x:/@_folder?value
            :x:/@_prefix?value
            :x:/@_filename?value
            filename:x:/@_filename?value

        widgets
          span
            {innerValue}:x:/*/filename?value

  /*
   * Retrieving all recipients.
   */
  p5.mysql.select:@"select name, email from contact inner join recipient on contact.id = recipient.contactid where recipient.emailid = @emailid"
    @emailid:x:/../*/email-id?value.string
  _recipients
  for-each:x:/@p5.mysql.select/*
    set:x:/@_recipients?value
      src:{0}, {1} <{2}>
        :x:/@_recipients?value
        :x:/@_dp/#/*/name?value
        :x:/@_dp/#/*/email?value
  set:x:/@_recipients?value
    trim:x:/@_recipients?value
      chars:" ,"

  /*
   * Retrieving actual email.
   */
  p5.mysql.select:@"select * from email 
inner join contact on email.sender = contact.id 
where email.id = @emailid"
    @emailid:x:/../*/email-id?value

  /*
   * Making sure we set email as read in databae.
   */
  p5.mysql.update:@"update email set isread = 1 where id = @id"
    @id:x:/../*/email-id?value

  /*
   * Making sure we set email as read in datagrid displaying email, in addition to displaying it as "open".
   */
  p5.web.widgets.find:sephia-datagrid
    _email-id:x:/../*/email-id?value
  sys42.utilities.delete-css-classes:x:/@p5.web.widgets.find/*/*?value
    class:sephia-unread
  sys42.utilities.add-css-classes:x:/@p5.web.widgets.find/*/*?value
    class:sephia-open

  /*
   * Selecing part from "part" database table, prioritizing "plain" text.
   */
  p5.mysql.select:@"select * from part where emailid = @emailid"
    @emailid:x:/../*/email-id?value
  _content
  if:x:@"/@p5.mysql.select/*/*/type/""=plain"""

    /*
     * Plain text content exists for email.
     * Prioritizing plain text content.
     *
     * Preparing content, which implies exchanging URLs etc.
     */
    eval-x:x:/+/*
    sys42.utilities.execute-lambda-file:@SEPHIA/prepare-email-plain-text-content.hl
      content:x:@"/@p5.mysql.select/*/*/type/""=plain""/./*/content?value"
    set:x:/@_content?value
      src:x:/@sys42.utilities.execute-lambda-file?value

  else-if:x:@"/@p5.mysql.select/*/*/type/""=html"""

    /*
     * No plain text content exists for email, but HTML content exists.
     * Fallback to HTML text content.
     *
     * Preparing content, which implies exchanging URLs etc.
     */
    eval-x:x:/+/*
    sys42.utilities.execute-lambda-file:@SEPHIA/prepare-email-html-content.hl
      content:x:@"/@p5.mysql.select/*/*/type/""=html""/./*/content?value"
    set:x:/@_content?value
      src:x:/@sys42.utilities.execute-lambda-file?value

    /*
     * Warning user.
     */
    sys42.windows.confirm
      header:WARNING!
      body:@"<p>This email did only have HTML parts. 
We have stripped it down to its minimum, to ensure your safety, hopefully it is possible to read.</p>
<p>Please notify sender that you do not wish to receive HTML emails in the future!</p>
<p>Emails with only HTML content is a known source for fishing attacks, and malware injection. We have protected
you by stripping away everything in the email that is potentially malicious.</p>
<p><strong>Notice!</strong> Be careful when clicking links in the email, and make 100% sure that the email is from who it claims to be from,
and that you trust its source!</p>"

  /*
   * Creating widget that opens email, making sure we unescape any HTML.
   */
  p5.html.html-encode:x:/@p5.mysql.select/@p5.mysql.select/*/*/subject?value
  p5.html.html-encode:x:/@p5.mysql.select/@p5.mysql.select/*/*/email?value
  p5.html.html-encode:x:/@p5.mysql.select/@p5.mysql.select/*/*/name?value
  p5.html.html-encode:x:/@_recipients?value
  p5.types.date.format:x:/@p5.mysql.select/*/*/date?value
  create-widget
    parent:sephia-read-emails
    _email-id:x:/@p5.mysql.select/@p5.mysql.select/*/*/id?value
    class:sephia-email col-xs-12
    widgets
      button
        class:btn btn-default sephia-reader-remove
        innerValue:@"<span class=""glyphicon glyphicon-remove""></span>"
        onclick

          /*
           * Finding parent main container widget, and simply deleting it.
           * Finding row for widget in datagrid, and removing the "sephia-open" CSS class.
           */
          p5.web.widgets.find-first-ancestor:x:/../*/_event?value
            _email-id
          p5.web.widgets.property.get:x:/@p5.web.widgets.find-first-ancestor/*/*?value
            _email-id
          p5.web.widgets.find:sephia-datagrid
            _email-id:x:/@p5.web.widgets.property.get/*/*?value
          sys42.utilities.delete-css-classes:x:/@p5.web.widgets.find/*/*?value
            class:sephia-open
          delete-widget:x:/@p5.web.widgets.find-first-ancestor/*/*?value

      button
        class:btn btn-default sephia-reader-reply
        innerValue:@"<span class=""glyphicon glyphicon-share-alt""></span>"
        onclick

          /*
           * Executing file responsible for creating a reply widget, making sure we pass in database ID of email.
           */
          p5.web.widgets.find-first-ancestor:x:/../*/_event?value
            _email-id
          p5.web.widgets.property.get:x:/@p5.web.widgets.find-first-ancestor/*/*?value
            _email-id
          eval-x:x:/+/*
          sys42.utilities.execute-lambda-file:@SEPHIA/reply-email.hl
            email-id:x:/@p5.web.widgets.property.get/*/*?value

      button
        class:btn btn-default sephia-reader-delete
        innerValue:@"<span class=""glyphicon glyphicon-trash""></span>"
        onclick

          /*
           * Deleting email, and deleting widget, plus row in reader, if it can be found.
           */
          p5.web.widgets.find-first-ancestor:x:/../*/_event?value
            _email-id
          p5.web.widgets.property.get:x:/@p5.web.widgets.find-first-ancestor/*/*?value
            _email-id

          /*
           * Deleting email from database.
           * But first making sure we delete all attachments physically from disc.
           */
          p5.mysql.connect:[sephia]
            p5.mysql.select:@"select * from attachments where emailid = @emailid"
              @emailid:x:/@p5.web.widgets.property.get/*/*?value.uint
            for-each:x:/@p5.mysql.select/*
              delete-file:{0}{1}{2}
                :x:/@_dp/#/*/folder?value
                :x:/@_dp/#/*/prefix?value
                :x:/@_dp/#/*/filename?value
            p5.mysql.delete:@"delete from email where id = @id"
              @id:x:/@p5.web.widgets.property.get/*/*?value.uint

          /*
           * Deleting associated widgets (reader and table row).
           */
          delete-widget:x:/@p5.web.widgets.find-first-ancestor/*/*?value
          p5.web.widgets.find:sephia-datagrid
            _email-id:x:/@p5.web.widgets.property.get/*/*?value.string
          delete-widget:x:/@p5.web.widgets.find/*/*?value

          /*
           * Informing user.
           */
          sys42.windows.info-tip:Email was deleted.

      h4
        innerValue:x:/@p5.mysql.connect/*/p5.html.html-encode/[0,1]?value
      p
        class:sephia-reader-pre
        innerValue:x:/@_content?value
      p
        class:sephia-reader-recipients
        innerValue:"Recipients: {0}"
          :x:/@p5.mysql.connect/*/p5.html.html-encode/[3,4]?value
      div
        class:sephia-attachments
        widgets
      literal
        element:div
        class:clearfix
      p
        class:sephia-reader-meta
        widgets
          span
            innerValue:"From; {0}"
              :x:/@p5.mysql.connect/*/p5.html.html-encode/[2,3]?value
          span
            innerValue:" &lt;{0}&gt;"
              :x:/@p5.mysql.connect/*/p5.html.html-encode/[1,2]?value
          span
            innerValue:" - "
          span
            innerValue:x:/@p5.types.date.format?value





  /*
   * Updating title of web page, to reflect unread emails.
   */
  p5.mysql.scalar:@"select count(*) from email where isread=0 and username = @username"
    @username:x:/@whoami/*/username?value
  if:x:/@p5.mysql.scalar?value.int
    =:int:0
    p5.web.page.set-title:@"Sephia"
  else
    p5.web.page.set-title:@"Sephia ({0})"
      :x:/@p5.mysql.scalar?value
