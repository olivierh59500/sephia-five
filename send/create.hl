
/*
 * Allows user to create a new email.
 *
 * Expects (optionally);
 *
 * - [subject] subject of email
 * - [body] content of email
 * - [to] comma separated list of recipients
 * - [cc] comma separated list of cc recipients
 * - [bcc] comma separated list of bcc recipients
 * - [email-id] being email that is responded to
 * - [after] widget the widget should be created after
 */





/*
 * Making sure we append signature into email.
 */
p5.auth.my-settings.get
if:x:/../*/body
  not
  insert-before:x:/../0
    src
      body:
set:x:/../*/body?value
  src:@"{0}


-- 
{1}"
    :x:/../*/body?value
    :x:/@p5.auth.my-settings.get/*/sephia/*/signature?value





/*
 * Loading all files from "sender-action-buttons" and assuming their some sort of widgets, and adding
 * them into our "sephia-action-buttons" div widget as such.
 */
list-files:@SEPHIA/send/send-action-buttons/
  filter:.hl
load-file:x:/@list-files/*?name
add:x:/../**/create-widget/**/_action-buttons/./*/widgets
  src:x:/@load-file/*/*





/*
 * Checking if caller declared an explicit "after widget".
 */
if:x:/../*/after?value
  eval-x:x:/+/*/*
  add:x:/../*/create-widget
    src
      after:x:/../*/after?value
else
  add:x:/../*/create-widget
    src
      parent:sephia-read-emails





/*
 * Creating our actual widget.
 */
p5.io.unroll-path:@SEPHIA/
create-widget
  _email-id:x:/../*/email-id?value
  _is-reply:true
  class:sephia-email-compose
  events

    /*
     * Returns the email, according to what data the user has supplied.
     *
     * Expects [_arg] (main value of invocation) being ID of widget to retrieve email from.
     */
    sephia.get-email

      /*
       * Verifying this invocation was meant for the current instance.
       */
      if:x:/../*/_event?value
        !=:x:/../*/_arg?value

        /*
         * Event was fired for a different widget.
         */
        return

      /*
       * Finding and returning all email data for current instance.
       */
      p5.web.widgets.find:x:/../*/_event?value
        _to-field-to
      p5.web.widgets.find:x:/../*/_event?value
        _to-field-cc
      p5.web.widgets.find:x:/../*/_event?value
        _to-field-bcc
      p5.web.widgets.find:x:/../*/_event?value
        _subject
      p5.web.widgets.find:x:/../*/_event?value
        _body
      p5.web.widgets.find:x:/../*/_event?value
        _reply-attachment

      /*
       * Retrieving values of all widgets found above.
       */
      p5.web.widgets.property.get:x:/../*/p5.web.widgets.find/[0,1]/*/*?value
        value
      p5.web.widgets.property.get:x:/../*/p5.web.widgets.find/[1,2]/*/*?value
        value
      p5.web.widgets.property.get:x:/../*/p5.web.widgets.find/[2,3]/*/*?value
        value
      p5.web.widgets.property.get:x:/../*/p5.web.widgets.find/[3,4]/*/*?value
        value
      p5.web.widgets.property.get:x:/../*/p5.web.widgets.find/[4,5]/*/*?value
        value
      p5.web.widgets.property.get:x:/../*/p5.web.widgets.find/[5,6]/*/*?value
        _folder
        _filename
        _prefix
      set:x:/@p5.web.widgets.property.get/*?name
        src:attachment

      /*
       * Returning email to caller.
       */
      add:x:/+2
        src:x:/@p5.web.widgets.property.get/*
      eval-x:x:/+/*
      return
        To:x:/../*/p5.web.widgets.property.get/[0,1]/*/*?value
        Cc:x:/../*/p5.web.widgets.property.get/[1,2]/*/*?value
        Bcc:x:/../*/p5.web.widgets.property.get/[2,3]/*/*?value
        subject:x:/../*/p5.web.widgets.property.get/[3,4]/*/*?value
        body:x:/../*/p5.web.widgets.property.get/[4,5]/*/*?value

  widgets

    /*
     * Attachments "drag'n'drop" widget.
     *
     * Notice, we only allow hl, txt, md, zip, png, jpg, jpeg and gif files, to avoid spreading viruses around.
     *
     * Maybe we could have extended this list slightly, but at least these files are definitely safe!
     */
    sys42.widgets.uploader
      filter:hl|txt|md|zip|png|jpg|jpeg|gif|asc
      allow-multiple:true
      class:sephia-uploader
      clickable:false
      .onupload

        /*
         * Invoking file responsible for accepting uploaded file, and adding a widget for file into main "reply widget".
         *
         * Notice, we simply pass in all arguments flat.
         */
        add:x:/+
          src:x:/./--
        sys42.utilities.execute-lambda-file:@SEPHIA/send/upload.hl

    /*
     * Subject of email.
     */
    div
      class:row
      widgets
        div
          class:column
          widgets
            input
              type:text
              placeholder:Subject ...
              _subject
              value:x:/../*/subject?value

            /*
             * Body of email.
             */
            textarea
              rows:13
              placeholder:Content ...
              _body
              innerValue:x:/../*/body?value

    /*
     * "To" field.
     *
     * Notice, these email address(es) are stored comma separated in a simple textbox, 
     * meaning we'll have to do some parsing, when actually sending email later.
     *
     * This allows the user to simply type in an addition email address, without having to go through the 
     * "add contact" form, if he doesn't want to do such.
     */
    div
      class:row
      _to-field
      widgets

        div
          class:column
          widgets

            /*
             * Textbox for "To" recipient(s).
             */
            input
              type:text
              class:sephia-recipient
              placeholder:To ...
              value:x:/../*/to?value
              _to-field-to

            /*
             * Add new recipient button.
             */
            button
              class:button-clear float-right sephia-add-recipient-btn
              innerValue:@"<svg class=""sephia-icon""><use xlink:href=""{0}media/si-sprite.svg#si-evil-search""></use></svg>"
                :x:/@p5.io.unroll-path?value
              onclick

                /*
                 * Executing file that is reponsible for retrieving a new email address from "contact" table,
                 * making sure we pass in widget ID for widget, where result should be added.
                 */
                p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                  _to-field
                p5.web.widgets.find:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                  element:input
                eval-x:x:/+/*
                sys42.utilities.execute-lambda-file:@SEPHIA/send/add-recipient.hl
                  widget:x:/@p5.web.widgets.find/*/*?value
                p5.web.widgets.get-parent:x:/@p5.web.widgets.find/*/*?value
                sys42.utilities.add-css-classes:x:/@p5.web.widgets.get-parent/*/*?value
                  class:sephia-open-recipient

    /*
     * "Cc" field.
     *
     * Notice, these email address(es) are stored comma separated in a simple textbox, 
     * meaning we'll have to do some parsing, when actually sending email later.
     *
     * This allows the user to simply type in an addition email address, without having to go through the 
     * "add contact" form, if he doesn't want to do such.
     */
    div
      class:row
      _to-field
      widgets

        div
          class:column
          widgets

            /*
             * Textbox for "Cc" recipient(s).
             */
            input
              type:text
              class:sephia-recipient
              placeholder:Cc ...
              value:x:/../*/cc?value
              _to-field-cc

            /*
             * Add new recipient button.
             */
            button
              class:button-clear float-right sephia-add-recipient-btn
              innerValue:@"<svg class=""sephia-icon""><use xlink:href=""{0}media/si-sprite.svg#si-evil-search""></use></svg>"
                :x:/@p5.io.unroll-path?value
              onclick

                /*
                 * Executing file that is reponsible for retrieving a new email address from "contact" table,
                 * making sure we pass in widget ID for widget, where result should be added.
                 */
                p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                  _to-field
                p5.web.widgets.find:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                  element:input
                eval-x:x:/+/*
                sys42.utilities.execute-lambda-file:@SEPHIA/send/add-recipient.hl
                  widget:x:/@p5.web.widgets.find/*/*?value
                p5.web.widgets.get-parent:x:/@p5.web.widgets.find/*/*?value
                sys42.utilities.add-css-classes:x:/@p5.web.widgets.get-parent/*/*?value
                  class:sephia-open-recipient

    /*
     * "Bcc" field.
     *
     * Notice, these email address(es) are stored comma separated in a simple textbox, 
     * meaning we'll have to do some parsing, when actually sending email later.
     *
     * This allows the user to simply type in an addition email address, without having to go through the 
     * "add contact" form, if he doesn't want to do such.
     */
    div
      class:row
      _to-field
      widgets

        div
          class:column
          widgets

            /*
             * Textbox for "Bcc" recipient(s).
             */
            input
              type:text
              class:sephia-recipient
              placeholder:Bcc ...
              value:x:/../*/bcc?value
              _to-field-bcc

            /*
             * Add new recipient button.
             */
            button
              class:button-clear float-right sephia-add-recipient-btn
              innerValue:@"<svg class=""sephia-icon""><use xlink:href=""{0}media/si-sprite.svg#si-evil-search""></use></svg>"
                :x:/@p5.io.unroll-path?value
              onclick

                /*
                 * Executing file that is reponsible for retrieving a new email address from "contact" table,
                 * making sure we pass in widget ID for widget, where result should be added.
                 */
                p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                  _to-field
                p5.web.widgets.find:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                  element:input
                eval-x:x:/+/*
                sys42.utilities.execute-lambda-file:@SEPHIA/send/add-recipient.hl
                  widget:x:/@p5.web.widgets.find/*/*?value
                p5.web.widgets.get-parent:x:/@p5.web.widgets.find/*/*?value
                sys42.utilities.add-css-classes:x:/@p5.web.widgets.get-parent/*/*?value
                  class:sephia-open-recipient

    /*
     * Attachment widget.
     *
     * This guys will contain one "button" for each attachment that has been uploaded.
     */
    div
      class:row
      widgets
        container
          _attachment-wrapper
          class:column sephia-attachments
    div
      class:row
      widgets
        div
          class:column sephia-reply-action-buttons
          _action-buttons
          widgets

            /*
             * "Action buttons" (send, discard, etc).
             *
             * These widgets are actually plugins, and dynamically added from each of the files that can be found in
             * the "/send/sender-action-buttons/" folder.
             *
             * If you wish to create your own "action button", this can easily be done by copying one of the existing buttons
             * from that folder.
             */
